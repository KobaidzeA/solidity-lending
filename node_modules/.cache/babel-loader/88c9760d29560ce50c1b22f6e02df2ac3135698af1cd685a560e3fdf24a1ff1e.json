{"ast":null,"code":"var _jsxFileName = \"/home/ak/Desktop/react/v1/src/components/BorrowerButtons.js\";\nimport { myContract } from \"./SmartContract\";\nimport { web3 } from \"./SmartContract\";\n//import { myUser } from \"./AccountData\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst accounts = await web3.eth.getAccounts();\nconst lenderData = await myContract.methods.lenderArrJS().call();\nconst borrowerData = await myContract.methods.borrowerArrJS().call();\nconst converter = 1000000000;\nasync function closeAcc() {\n  console.log(accounts[0]);\n  console.log(await myContract.methods.closeBorrower().send({\n    from: accounts[0]\n  }));\n}\nvar myUser = [];\nfor (let i = 0; i < borrowerData.length; i++) {\n  if (accounts[0] === borrowerData[i][0]) {\n    myUser = borrowerData[i];\n  }\n}\nconst customSort = (a, b) => b[1] - a[1];\nvar sortedLenders = [...lenderData].sort(customSort);\nconsole.log(sortedLenders);\nasync function getLoan() {\n  console.log(sortedLenders);\n  var loanAmount = window.prompt(\"Enter the amount you wish to borrow, your limit is \" + myUser[1] * converter + \" wei\");\n  var forSort = loanAmount;\n  var lenderArr = [];\n  var lenderAmounts = [];\n  if (loanAmount > myUser[1] * converter) {\n    alert(\"The amount you have entered is more than your limit! try again\");\n    return;\n  }\n  for (var i = 0; i < sortedLenders.length; i++) {\n    if (forSort <= 0) {\n      lenderAmounts[i - 1] = forSort * -1;\n      break;\n    }\n    forSort -= parseInt(sortedLenders[i][1], 10);\n    console.log(\"Added from lender \" + sortedLenders[i][0] + \" The added amount is = \" + sortedLenders[i][1]);\n    lenderArr.push(sortedLenders[i][0]);\n    lenderAmounts.push(parseInt(sortedLenders[i][1], 10));\n    console.log(lenderArr);\n    console.log(lenderAmounts);\n  }\n  const batch = new web3.BatchRequest();\n  batch.add(myContract.methods.borrowMoney(loanAmount).send.request({\n    from: accounts[0]\n  }));\n  for (var i = 0; i < lenderArr.length; i++) {\n    console.log(lenderArr[i] + \" money amount=\" + lenderAmounts[i]);\n    batch.add(myContract.methods.updateLoan(accounts[0], lenderArr[i], lenderAmounts[i]).send.request({\n      from: accounts[0]\n    }));\n  }\n  batch.execute();\n}\nasync function repay() {\n  var myLoan = await myContract.methods.getLoanDetails().call({\n    from: accounts[0]\n  });\n  // console.log(myLoan);\n  var totalDebtAmount = 0;\n  for (var i = 0; i < myLoan.length; i++) {\n    totalDebtAmount += parseInt(myLoan[1][i], 10);\n  }\n  await myContract.methods.payBack().send({\n    from: accounts[0],\n    value: totalDebtAmount * 2\n  });\n  console.log(sortedLenders);\n  console.log(myLoan);\n}\nexport default function BorrowerButtons() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"functionDiv\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttonContainer\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: closeAcc,\n          className: \"functionButton\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"closeSpan\",\n            children: \"Close Account\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 68\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttonContainer\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: getLoan,\n          className: \"functionButton\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"loanSpan\",\n            children: \"Get a Loan\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 66\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttonContainer\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: repay,\n          className: \"functionButton\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"repaySpan\",\n            children: \"Pay back\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 64\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n_c = BorrowerButtons;\nvar _c;\n$RefreshReg$(_c, \"BorrowerButtons\");","map":{"version":3,"names":["myContract","web3","jsxDEV","_jsxDEV","Fragment","_Fragment","accounts","eth","getAccounts","lenderData","methods","lenderArrJS","call","borrowerData","borrowerArrJS","converter","closeAcc","console","log","closeBorrower","send","from","myUser","i","length","customSort","a","b","sortedLenders","sort","getLoan","loanAmount","window","prompt","forSort","lenderArr","lenderAmounts","alert","parseInt","push","batch","BatchRequest","add","borrowMoney","request","updateLoan","execute","repay","myLoan","getLoanDetails","totalDebtAmount","payBack","value","BorrowerButtons","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/ak/Desktop/react/v1/src/components/BorrowerButtons.js"],"sourcesContent":["import { myContract } from \"./SmartContract\";\nimport { web3 } from \"./SmartContract\";\n//import { myUser } from \"./AccountData\";\n\nconst accounts = await web3.eth.getAccounts();\nconst lenderData = await myContract.methods.lenderArrJS().call();\nconst borrowerData = await myContract.methods.borrowerArrJS().call();\nconst converter = 1000000000;\nasync function closeAcc() {\n    console.log(accounts[0]);\n    console.log(await myContract.methods.closeBorrower().send({\n        from: accounts[0]\n        \n    }));\n}\nvar myUser = [];\nfor(let i = 0; i < borrowerData.length; i++) {\n    if(accounts[0] === borrowerData[i][0]) {\n        myUser = borrowerData[i];\n       \n    }\n}\nconst customSort =(a,b) => b[1] - a[1];\nvar sortedLenders = [...lenderData].sort(customSort);\nconsole.log(sortedLenders);\nasync function getLoan() {\n    console.log(sortedLenders);\n    var loanAmount = window.prompt(\"Enter the amount you wish to borrow, your limit is \"+myUser[1]*converter+\" wei\");\n    var forSort = loanAmount;\n    var lenderArr =[];\n    var lenderAmounts = [];\n    if(loanAmount > myUser[1]*converter) {\n        alert(\"The amount you have entered is more than your limit! try again\");\n        return\n    } \n    for(var i=0; i<sortedLenders.length; i++) {\n        if(forSort <= 0) {\n            lenderAmounts[i-1] = forSort*-1;\n            break; \n        }\n        forSort -= parseInt(sortedLenders[i][1],10);\n        console.log(\"Added from lender \"+sortedLenders[i][0]+\" The added amount is = \"+sortedLenders[i][1]);\n        lenderArr.push(sortedLenders[i][0]);\n        lenderAmounts.push(parseInt(sortedLenders[i][1],10));\n        console.log(lenderArr);\n        console.log(lenderAmounts);\n        \n    }\n    const batch = new web3.BatchRequest();\n    batch.add(myContract.methods.borrowMoney(loanAmount).send.request({from: accounts[0]}));\n     for(var i=0; i<lenderArr.length; i++) {\n        console.log(lenderArr[i]+\" money amount=\"+lenderAmounts[i]);\n        batch.add(myContract.methods.updateLoan(accounts[0],lenderArr[i],lenderAmounts[i]).send.request({\n            from: accounts[0]\n        }));\n    }\n    batch.execute();\n}\n\nasync function repay() {\n    var myLoan = await myContract.methods.getLoanDetails().call({\n        from: accounts[0]\n    });\n   // console.log(myLoan);\n    var totalDebtAmount=0;\n    for(var i=0; i<myLoan.length; i++) {\n        totalDebtAmount += parseInt(myLoan[1][i],10);\n    }\n    await myContract.methods.payBack().send({\n        from: accounts[0],\n        value: totalDebtAmount*2\n    });\n        console.log(sortedLenders);\n        console.log(myLoan);\n}\n\nexport default function BorrowerButtons() {\n    return(\n        <>\n        <div className=\"functionDiv\"> \n            <div className=\"buttonContainer\">\n            <button  onClick={closeAcc} className=\"functionButton\"><span className=\"closeSpan\">Close Account</span></button>\n            </div>\n            <div className=\"buttonContainer\">\n            <button onClick={getLoan} className=\"functionButton\"><span className=\"loanSpan\">Get a Loan</span></button>\n            </div>\n            <div className=\"buttonContainer\">\n            <button onClick={repay} className=\"functionButton\"><span className=\"repaySpan\">Pay back</span></button>\n            </div>\n        </div>\n        </>\n    )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}